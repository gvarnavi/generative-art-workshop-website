"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[952],{5117:function(e,t,n){e.exports=n.p+"05860520ae09c4b4"},7872:function(e,t,n){e.exports=n.p+"fa3c8c046393328c"},5952:function(e,t,n){function i(e,t){const n=e.module();return n.variable(t()).define(["md"],(function(e){return e`# Disposal

<p style="background: #fffced; box-sizing: border-box; padding: 10px 20px;">***Update Feb. 2021:*** *The disposal function is now available as part of [**Observable Inputs**](/@observablehq/inputs)! This notebook will remain for history, but please upgrade.*</p>

This is a little helper to detect when an element is removed from the DOM. It functions similarly to [invalidation](https://github.com/observablehq/notebook-stdlib/blob/master/README.md#invalidation), except that you don’t need to pass the invalidation promise around. The downside is that it only works if the resource you want to dispose is attached to a DOM element.`})),n.variable(t("disposal")).define("disposal",["Inputs"],(function(e){return e.disposal})),n.variable(t()).define(["md","test"],(function(e,t){return e`This is a test; the count should be three.

${Array.from({length:3},t)}`})),n.define("initial count",(function(){return 0})),n.variable(t("mutable count")).define("mutable count",["Mutable","initial count"],((e,t)=>new e(t))),n.variable(t("count")).define("count",["mutable count"],(e=>e.generator)),n.variable(t("test")).define("test",["html","mutable count","disposal"],(function(e,t,n){return function(){const i=e`<span>`;return++t.value,n(i).then((()=>--t.value)),i}})),n}function a(e,t){const n=e.module();n.variable(t()).define(["md"],(function(e){return e`# Synchronized Views

<p style="background: #fffced; box-sizing: border-box; padding: 10px 20px;">***Update Feb. 2021:*** *Observable now supports [**synchronized inputs**](/@observablehq/synchronized-inputs)! This notebook will remain for history, but please upgrade to [Observable Inputs](/@observablehq/inputs).*</p>

[A view](/@mbostock/introduction-to-views) conveniently defines an interactive value.`})),n.variable(t("viewof x")).define("viewof x",["html"],(function(e){return e`<input type=range>`})),n.variable(t("x")).define("x",["Generators","viewof x"],((e,t)=>e.input(t))),n.variable(t()).define(["x"],(function(e){return e})),n.variable(t()).define(["md"],(function(e){return e`While each interactive value is often independent, other times multiple controls manipulate a shared value. This requires synchronizing views such that interaction with any one view updates both the interactive value and the other views.

One way to synchronize is to treat [views as mutable values](/@mbostock/views-are-mutable-values): make one view the “primary” view, and have the other “secondary” views listen to and mutate the primary view. But sometimes it isn’t obvious which view should be primary.

A more general approach is a *minimal* view: a container for a mutable value that implements the [EventTarget](https://developer.mozilla.org/docs/Web/API/EventTarget) interface, making it compatible with \`viewof\`. This minimal view also exposes a *view*.value property representing its current value; setting the value causes the view to dispatch an *input* event, which in turn causes Observable to [rerun](/@mbostock/how-observable-runs) any referencing cells.`})),n.variable(t("View")).define("View",["bind"],(function(e){return class{constructor(e){Object.defineProperties(this,{_list:{value:[],writable:!0},_value:{value:e,writable:!0}})}get value(){return this._value}set value(e){this._value=e,this.dispatchEvent(new CustomEvent("input",{detail:e}))}addEventListener(e,t){"input"!=e||this._list.includes(t)||(this._list=[t].concat(this._list))}removeEventListener(e,t){"input"==e&&(this._list=this._list.filter((e=>e!==t)))}dispatchEvent(e){const t=Promise.resolve(e);this._list.forEach((e=>t.then(e)))}bind(t,n){return e(t,this,n)}}})),n.variable(t()).define(["md"],(function(e){return e`Now let’s define a minimal view whose initial value is 42:`})),n.variable(t("viewof y")).define("viewof y",["View"],(function(e){return new e(42)})),n.variable(t("y")).define("y",["Generators","viewof y"],((e,t)=>e.input(t))),n.variable(t()).define(["md"],(function(e){return e`Here’s our view’s value:`})),n.variable(t()).define(["y"],(function(e){return e})),n.variable(t()).define(["md"],(function(e){return e`And now let’s define an input that both listens to the minimal view and assigns a new value on interaction. Notice that dragging the slider changes the value of *y*.`})),n.variable(t()).define(["viewof y","html"],(function(e,t){return e.bind(t`<input type=range min=0 max=100 step=1>`)})),n.variable(t()).define(["md"],(function(e){return e`Here are two more inputs (of different types!) bound to the same view. Interacting with either view below updates *y* as well as the other synchronized inputs above.`})),n.variable(t()).define(["viewof y","html"],(function(e,t){return e.bind(t`<input type=range min=0 max=100 step=1>`)})),n.variable(t()).define(["viewof y","html"],(function(e,t){return e.bind(t`<input type=number min=0 max=100 step=1>`)})),n.variable(t()).define(["y"],(function(e){return e})),n.variable(t()).define(["md"],(function(e){return e`It works with text, too.`})),n.variable(t("viewof name")).define("viewof name",["View"],(function(e){return new e("fred")})),n.variable(t("name")).define("name",["Generators","viewof name"],((e,t)=>e.input(t))),n.variable(t()).define(["viewof name","html"],(function(e,t){return e.bind(t`<input type=text>`)})),n.variable(t()).define(["viewof name","html"],(function(e,t){return e.bind(t`<input type=text>`)})),n.variable(t()).define(["name"],(function(e){return e})),n.variable(t("viewof toggled")).define("viewof toggled",["View"],(function(e){return new e(!0)})),n.variable(t("toggled")).define("toggled",["Generators","viewof toggled"],((e,t)=>e.input(t))),n.variable(t()).define(["viewof toggled","html"],(function(e,t){return e.bind(t`<input type=checkbox>`)})),n.variable(t()).define(["viewof toggled","html"],(function(e,t){return e.bind(t`<input type=checkbox>`)})),n.variable(t()).define(["toggled"],(function(e){return e})),n.variable(t()).define(["md"],(function(e){return e`---

## Appendix

This implementation uses my [disposal promise](/@mbostock/disposal) to detach bound inputs, rather than requiring you to pass the [invalidation promise](/@observablehq/invalidation) explicitly. The unification of various input types is based on [Generators.input](https://github.com/observablehq/stdlib/blob/master/README.md#Generators_input) from the Observable standard library.`})),n.variable(t("bind")).define("bind",["disposal","set","eventof","get"],(function(e,t,n,i){return function(a,r,o=e(a)){t(a,r.value),a[`on${n(a)}`]=()=>r.value=i(a);const l=({detail:e})=>i(a)===e||t(a,e);return r.addEventListener("input",l),o.then((()=>r.removeEventListener("input",l))),a}})),n.variable(t("get")).define("get",(function(){return function(e){switch(e.type){case"range":case"number":return e.valueAsNumber;case"date":return e.valueAsDate;case"checkbox":return e.checked;case"file":return e.multiple?e.files:e.files[0];default:return e.value}}})),n.variable(t("set")).define("set",(function(){return function(e,t){switch(e.type){case"range":case"number":e.valueAsNumber=t;break;case"date":e.valueAsDate=t;break;case"checkbox":e.checked=t;break;case"file":e.multiple?e.files=t:e.files=[t];break;default:e.value=t}}})),n.variable(t("eventof")).define("eventof",(function(){return function(e){switch(e.type){case"button":case"submit":return"click";case"file":return"change";default:return"input"}}}));const a=e.module(i);return n.import("disposal",a),n}function r(e,t){const n=e.module();n.variable(t()).define(["md"],(function(e){return e`# Inline Inputs

Sometimes you might want to put inputs inline in your Markdown, rather than as separate cells. This is a little trickier, but possible, and you can even synchronize multiple inputs if you desire. Here’s an example:`})),n.variable(t()).define(["md","bind","html","viewof apples"],(function(e,t,n,i){return e`This is a range input ${t(n`<input type=range style="width:80px;">`,i)}.

This is a number input ${t(n`<input type=number style="width:80px;">`,i)}.`})),n.variable(t()).define(["md"],(function(e){return e`You can also do a standalone input:`})),n.variable(t()).define(["bind","html","viewof apples"],(function(e,t,n){return e(t`<input type=range>`,n)})),n.variable(t()).define(["md"],(function(e){return e`All of these inputs are synchronized using a [view](/@mbostock/synchronized-views):`})),n.variable(t("viewof apples")).define("viewof apples",["View"],(function(e){return new e(3)})),n.variable(t("apples")).define("apples",["Generators","viewof apples"],((e,t)=>e.input(t))),n.variable(t()).define(["md"],(function(e){return e`The view’s value can be referenced reactively:`})),n.variable(t()).define(["apples"],(function(e){return new Array(e+1).join("\ud83c\udf4e")})),n.variable(t()).define(["md"],(function(e){return e`To bind a given *input* to a *view*, you need bidirectional listening: the *input* needs to listen to the *view* (to update the *input*’s value), and the *view* needs to listen to the *input* (to update the *view*’s value). This is a [disposable view](/@mbostock/disposal).`})),n.variable(t("bind")).define("bind",["disposal"],(function(e){return function(t,n){const i=["range","number"].includes(t.type)?"valueAsNumber":"value";var a;return"file"==t.type?(a=()=>{},t.oninput=()=>{n.value=t.files}):"radiogroup"==t.type?(a=()=>{t.setter(n.value)},t.oninput=()=>{n.value=t.getter()}):"checkbox"==t.type?(a=()=>t.checked=n.value,t.oninput=()=>n.value=t.checked):(a=()=>t[i]=n.value,t.oninput=()=>n.value=t[i]),n.addEventListener("input",a),e(t).then((()=>n.removeEventListener("input",a))),a(),t}})),n.variable(t()).define(["md"],(function(e){return e`### Some useful gui components`})),n.variable(t("makeSlider")).define("makeSlider",["html"],(function(e){return function(t={}){let{min:n=0,max:i=10,step:a=.1,size:r="10em"}=t;return e`<input type=range min=${n} max=${i} step=${a} style='width:${r}'>`}})),n.variable(t("makeFile")).define("makeFile",["html"],(function(e){return function(t={}){let{multiple:n=!1,accept:i,size:a="20em"}=t;return e`<input type=file multiple=${n} accept=${i} style='width:${a}'>`}})),n.variable(t("makeColor")).define("makeColor",["html"],(function(e){return function(t={}){return e`<input type=color />`}})),n.variable(t("makeSelect")).define("makeSelect",["html"],(function(e){return function(t={}){let{options:n=[]}=t,i=e`<select></select>`;for(let a of n)i.append(e`<option value=${a}>${a}</option>`);return i}})),n.variable(t("makeNumber")).define("makeNumber",["html"],(function(e){return function(t={}){let{min:n=0,max:i=10,step:a=.1,size:r="4em"}=t;return e`<input type=number min=${n} max=${i} step=${a} style="width:${r};">`}})),n.variable(t("makeCheckbox")).define("makeCheckbox",["html"],(function(e){return function(){return e`<input type="checkbox">`}})),n.variable(t("makeRadioGroup")).define("makeRadioGroup",["html"],(function(e){return function(t={}){let{options:n=[]}=t,i=e`<form></form>`;i.style.display="inline-block",i.type="radiogroup";let a="group"+n.join(""),r=new Map;for(let o of n){let t=e`<input type=radio name=${a} value=${o} id=${o}>`;r.set(o,t),i.append(r.get(o)),i.append(e`<label for=${o}> ${o}&nbsp;&nbsp;</label>`)}return i.setter=function(e){for(let[t,n]of r)n.checked=t==e},i.getter=function(){for(let[e,t]of r)if(t.checked)return e},i}})),n.variable(t("makeCheckGroup")).define("makeCheckGroup",["html"],(function(e){return function(t={}){let{options:n=[]}=t,i=e`<form></form>`;i.style.display="inline-block",i.type="radiogroup";n.join("");let a=new Map;for(let r of n){let t=e`<input type=checkbox id=${r}>`;a.set(r,t),i.append(t),i.append(e`<label for=${r}> ${r}&nbsp;&nbsp;</label>`)}return i.setter=function(e){let t=0;for(let[n,i]of a)i.checked=e[t++]},i.getter=function(){let e=[],t=0;for(let[n,i]of a)e[t++]=i.checked;return e},i}})),n.variable(t()).define(["md"],(function(e){return e`## Combo bind/make components`})),n.variable(t("bindSlider")).define("bindSlider",["bind","makeSlider"],(function(e,t){return(n,i)=>e(t(n),i)})),n.variable(t("bindNumber")).define("bindNumber",["bind","makeNumber"],(function(e,t){return(n,i)=>e(t(n),i)})),n.variable(t("bindSelect")).define("bindSelect",["bind","makeSelect"],(function(e,t){return(n,i)=>e(t(n),i)})),n.variable(t("bindFile")).define("bindFile",["bind","makeFile"],(function(e,t){return(n,i)=>e(t(n),i)})),n.variable(t("bindColor")).define("bindColor",["bind","makeColor"],(function(e,t){return(n,i)=>e(t(n),i)})),n.variable(t("bindCheckbox")).define("bindCheckbox",["bind","makeCheckbox"],(function(e,t){return(n,i)=>e(t(n),i)})),n.variable(t("bindCheckGroup")).define("bindCheckGroup",["bind","makeCheckGroup"],(function(e,t){return(n,i)=>e(t(n),i)})),n.variable(t("bindRadioGroup")).define("bindRadioGroup",["bind","makeRadioGroup"],(function(e,t){return(n,i)=>e(t(n),i)})),n.variable(t("bindSliderNumber")).define("bindSliderNumber",["html","bindSlider","bindNumber"],(function(e,t,n){return(i,a)=>e`<span>${t(i,a)} ${n(i,a)}</span>`})),n.variable(t()).define(["md"],(function(e){return e`### Example:`})),n.variable(t()).define(["md","bindSelect","viewof x","bindSliderNumber","viewof y","bindCheckbox","viewof z","bindRadioGroup","viewof w","bindCheckGroup","viewof s","bindFile","viewof f","bindColor","viewof c"],(function(e,t,n,i,a,r,o,l,s,u,c,d,h,f,p){return e`X: ${t({options:["a","b","c"]},n)}&nbsp;&nbsp;&nbsp;&nbsp;Y:${i({min:0,max:10,step:.1},a)}

Z: ${r("z",o)}

W: ${l({options:["a","b","c"]},s)}

S: ${u({options:["a","b","c"]},c)}

F: ${d({multiple:!0,accept:".png,.jpg",size:"20em"},h)}

C: ${f({},p)}`})),n.variable(t()).define(["md"],(function(e){return e`#### Variables`})),n.variable(t("viewof x")).define("viewof x",["View"],(function(e){return new e("a")})),n.variable(t("x")).define("x",["Generators","viewof x"],((e,t)=>e.input(t))),n.variable(t("viewof y")).define("viewof y",["View"],(function(e){return new e(5)})),n.variable(t("y")).define("y",["Generators","viewof y"],((e,t)=>e.input(t))),n.variable(t("viewof z")).define("viewof z",["View"],(function(e){return new e(!1)})),n.variable(t("z")).define("z",["Generators","viewof z"],((e,t)=>e.input(t))),n.variable(t("viewof w")).define("viewof w",["View"],(function(e){return new e("b")})),n.variable(t("w")).define("w",["Generators","viewof w"],((e,t)=>e.input(t))),n.variable(t("viewof s")).define("viewof s",["View"],(function(e){return new e([!1,!0,!0])})),n.variable(t("s")).define("s",["Generators","viewof s"],((e,t)=>e.input(t))),n.variable(t("viewof f")).define("viewof f",["View"],(function(e){return new e("")})),n.variable(t("f")).define("f",["Generators","viewof f"],((e,t)=>e.input(t))),n.variable(t("viewof c")).define("viewof c",["View"],(function(e){return new e("#ffaa00")})),n.variable(t("c")).define("c",["Generators","viewof c"],((e,t)=>e.input(t))),n.variable(t()).define(["x","y","z","w","s"],(function(e,t,n,i,a){return[e,t,n,i,a]})),n.variable(t()).define(["html","f","Files"],(async function(e,t,n){const i=e`<div>`;i.append(e`<h3>Image:</h3>`);for(var a=0;a<t.length;a++){t[a];let r=e`<img height="125px" />`;r.src=await n.url(t[a]),i.append(r)}return i})),n.variable(t()).define(["md"],(function(e){return e`### Imports`}));const r=e.module(a);n.import("View",r);const o=e.module(i);return n.import("disposal",o),n}function o(e,t){const n=e.module();n.variable(t()).define(["md"],(function(e){return e`# 2D Geometry Utils`})),n.variable(t()).define(["md"],(function(e){return e`## Vectors and Points

These are both represented by instances of class \`Vector\``})),n.variable(t("Vector")).define("Vector",(function(){class e{constructor(e=0,t=0){[this.x,this.y]=[e,t]}array(){return[this.x,this.y]}clone(){return new e(this.x,this.y)}mag(){return Math.sqrt(this.dot(this))}set(e){[this.x,this.y]=[e.x,e.y]}add(t){return new e(this.x+t.x,this.y+t.y)}sub(t){return new e(this.x-t.x,this.y-t.y)}dist(e){return this.sub(e).mag()}dot(e){return this.x*e.x+this.y*e.y}angle(e){return Math.acos(Math.min(Math.max(this.dot(e)/this.mag()/e.mag(),-1),1))}signedAngle(t){let n=this.angle(t);return new e(0,0).orient(this,t)>0?-n:n}scale(t){return new e(this.x*t,this.y*t)}rotate(t){let[n,i]=[Math.cos(t),Math.sin(t)];return new e(n*this.x-i*this.y,i*this.x+n*this.y)}mix(t,n){return new e(this.x*(1-n)+t.x*n,this.y*(1-n)+t.y*n)}normalize(){return this.scale(1/this.mag())}distSegment(e,t){var n=e.dist(t);if(n<1e-5)return this.dist(e);var i=t.sub(e).scale(1/n),a=this.sub(e).dot(i);return a<0?this.dist(e):a>n?this.dist(t):e.mix(t,a/n).dist(this)}orient(e,t){return Math.sign((n=1,i=1,a=1,r=this.x,o=e.x,l=t.x,s=this.y,u=e.y,c=t.y,n*(o*c-l*u)+i*(l*s-r*c)+a*(r*u-o*s)));var n,i,a,r,o,l,s,u,c}}return e})),n.variable(t("Vec")).define("Vec",["Vector"],(function(e){return(t,n)=>new e(t,n)})),n.variable(t()).define(["md"],(function(e){return e`## 2D Rays`})),n.variable(t("Ray")).define("Ray",(function(){return class e{constructor(e,t){[this.p,this.v]=[e,t]}point(e){return this.p.add(this.v.scale(e))}intersectRay(e){let[t,n]=[this.p.x,this.v.x],[i,a]=[this.p.y,this.v.y],[r,o]=[e.p.x,e.v.x],[l,s]=[e.p.y,e.v.y],u=n*s-a*o;return!(Math.abs(u)<=Number.EPSILON)&&[(s*(r-t)+i*o-l*o)/u,(a*(r-t)+i*n-l*n)/u]}intersectSegment(t,n){let i=new e(t,n.sub(t)),a=this.intersectRay(i);if(0==a)return!1;let[r,o]=a;return r>0&&o>=0&&o<=1?r:-1}}})),n.variable(t()).define(["md"],(function(e){return e`## Binary Heap

(needed for the implementation of the Douglas-Peucker-Ramer curve simplification algorithm)`})),n.variable(t("BinaryHeap")).define("BinaryHeap",(function(){function e(e){this.content=[],this.scoreFunction=e||function(e){return e}}return e.prototype={push:function(e){this.content.push(e),this.bubbleUp(this.content.length-1)},pop:function(){var e=this.content[0],t=this.content.pop();return this.content.length>0&&(this.content[0]=t,this.sinkDown(0)),e},remove:function(e){for(var t=this.content.length,n=0;n<t;n++)if(this.content[n]==e){var i=this.content.pop();if(n==t-1)break;this.content[n]=i,this.bubbleUp(n),this.sinkDown(n);break}},size:function(){return this.content.length},bubbleUp:function(e){for(var t=this.content[e],n=this.scoreFunction(t);e>0;){var i=Math.floor((e+1)/2)-1,a=this.content[i];if(n>=this.scoreFunction(a))break;this.content[i]=t,this.content[e]=a,e=i}},sinkDown:function(e){for(var t=this.content.length,n=this.content[e],i=this.scoreFunction(n);;){var a=2*(e+1),r=a-1,o=null;if(r<t){var l=this.content[r],s=this.scoreFunction(l);s<i&&(o=r)}if(a<t){var u=this.content[a];this.scoreFunction(u)<(null==o?i:s)&&(o=a)}if(null==o)break;this.content[e]=this.content[o],this.content[o]=n,e=o}}},e})),n.variable(t()).define(["md"],(function(e){return e`## Curve`})),n.variable(t("Curve")).define("Curve",["Vec","MBR","CatmullRom","BinaryHeap"],(function(e,t,n,i){class a extends Array{constructor(...e){super(...e)}arcLength(){let e=this[0],t=0,n=[];n[0]=0;for(let a=1;a<this.length;a++){var i=this[a];t+=i.dist(e),n[a]=t,e=i}return n}perimeter(){return this.arcLength()[this.length-1]}area(){let e=0;for(let t=0;t<this.length;t++){let n=(t+1)%this.length;e+=this[t].x*this[n].y,e-=this[t].y*this[n].x}return e}centroid(){let t=e();for(let e of this)t.x+=e.x,t.y+=e.y;return t.x/=this.length,t.y/=this.length,t}mbr(){let e=new t;for(let t of this)e.add(t);return e}contains(e){let t=this.length,{x:n,y:i}=this[t-1],{x:a,y:r}=e,o=!1;for(let{x:l,y:s}of this)s>r!=i>r&&a<(n-l)*(r-s)/(i-s)+l&&(o=!o),n=l,i=s;return o}subsample(e=0,t=1e10){let n=function(e,t){var n=new i((function(e){return-e.dist})),a=[];if(a[0]=0,a[e.length-1]=1,e.length<=2)return a;n.push(r(0,e.length-1,e));var o=2;for(;n.size()>0;){var l=n.pop();if(l.dist<t)break;a[l.farthest]=o++,l.farthest>l.first+1&&n.push(r(l.first,l.farthest,e)),l.last>l.farthest+1&&n.push(r(l.farthest,l.last,e))}return a}(this,e);var o=new a;for(let i=0;i<this.length;i++)null!=n[i]&&n[i]<t&&o.push(this[i]);return o}chaikin(e=!1){let t=new a,[n,i]=e?[this[this.length-1],0]:[this[0],1];for(;i<this.length;i++){let a=this[i],r=a.sub(n);e||1!=i?t.push(n.add(r.scale(.25))):t.push(n),e||i+1<this.length?t.push(n.add(r.scale(.75))):t.push(a),n=a}return t}resample(e,t=!1){t&&(e++,this.push(this[0]));let n=this.arcLength(),i=n[n.length-1]/(e-1),r=this[0],o=new a;o.push(r.clone());let l=0;for(let a=1;a<e;a++){let e=i*a;for(;l+1<this.length-1&&n[l+1]<e;)l++;let t=n[l+1]-n[l],r=0==t?0:(e-n[l])/t,s=this[l].mix(this[l+1],r);o.push(s)}return t&&(this.pop(),o.pop()),o}splineResample(e,t=!1,i=.5){let r=(t?[]:[this[0]]).concat(this);t||r.push(this[this.length-1]);let o=new n(...r);o.tension=i;let l=new a,s=t?this.length/(e-1):(this.length-1)/(e-1);for(let n=0;n<e;n++){let e=n*s;l.push(o.point(e))}return l}}function r(e,t,n){for(var i=0,a=e+1,r=n[e],o=n[t],l=e+1;l<t;l++){var s=n[l].distSegment(r,o);s>i&&(i=s,a=l)}return{first:e,last:t,farthest:a,dist:i}}return a})),n.variable(t()).define(["md"],(function(e){return e`### Curve demo`})),n.variable(t()).define(["html","curve","vertexCount","tolerance","md"],(function(e,t,n,i,a){let r=e`<button>Resample</button>`;r.onclick=()=>{t.splice(0,t.length,...t.resample(n))};let o=e`<button>Subsample</button>`;o.onclick=()=>{t.splice(0,t.length,...t.subsample(i,n))};let l=e`<button>Spline Resample</button>`;l.onclick=()=>{t.splice(0,t.length,...t.splineResample(n))};let s=e`<button>Chaikin Resample</button>`;return s.onclick=()=>{t.splice(0,t.length,...t.chaikin())},a`${r} ${l} ${o} ${s}`})),n.variable(t()).define(["md","bindSliderNumber","viewof tolerance","viewof vertexCount"],(function(e,t,n,i){return e`tolerance:${t({min:1,max:100,step:1},n)}
  vertices:${t({min:2,max:200,step:1},i)}`})),n.variable(t()).define(["width","DOM","Vec","curve"],(function*(e,t,n,i){let a=9*e/16;const r=t.canvas(e,a,1),o=r.getContext("2d");let l=null;for(r.oncontextmenu=function(e){e.preventDefault()},r.onmousedown=function(e){let t=n(e.offsetX,e.offsetY);1&e.buttons?(i.length=0,i.push(t)):l=i.contains(t)?t:null},r.onmousemove=function(e){let t=n(e.offsetX,e.offsetY);if(1&e.buttons)i.push(t);else if(6&e.buttons&&l){let e=t.sub(l);for(let t of i)t.x+=e.x,t.y+=e.y;l=t}};;){if(o.lineWidth=1,o.clearRect(0,0,e,a),o.strokeStyle="black",i.length>0){o.beginPath(),o.moveTo(i[0].x,i[0].y);for(let e=1;e<i.length;e++)o.lineTo(i[e].x,i[e].y);o.stroke(),o.fillStyle="rgba(255,0,0,0.5)";for(let{x:e,y:t}of i)o.beginPath(),o.arc(e,t,4,0,2*Math.PI),o.fill()}yield r}})),n.define("initial curve",["Curve","Vec"],(function(e,t){return new e(t(100,100),t(300,300),t(500,200))})),n.variable(t("mutable curve")).define("mutable curve",["Mutable","initial curve"],((e,t)=>new e(t))),n.variable(t("curve")).define("curve",["mutable curve"],(e=>e.generator)),n.variable(t("viewof vertexCount")).define("viewof vertexCount",["View"],(function(e){return new e(100)})),n.variable(t("vertexCount")).define("vertexCount",["Generators","viewof vertexCount"],((e,t)=>e.input(t))),n.variable(t("viewof tolerance")).define("viewof tolerance",["View"],(function(e){return new e(5)})),n.variable(t("tolerance")).define("tolerance",["Generators","viewof tolerance"],((e,t)=>e.input(t))),n.variable(t()).define(["md"],(function(e){return e`## Cubic Bézier Curves

Represented by instances of class \`Bezier\``})),n.variable(t("Bezier")).define("Bezier",(function(){return class{constructor(e,t,n,i){this.p=[e,t,n,i]}point(e){var[t,n,i,a]=this.p,[r,o,l]=[t.mix(n,e),n.mix(i,e),i.mix(a,e)],[s,u]=[r.mix(o,e),o.mix(l,e)];return s.mix(u,e)}tangent(e){var[t,n,i,a]=this.p,[r,o,l]=[t.mix(n,e),n.mix(i,e),i.mix(a,e)],[s,u]=[r.mix(o,e),o.mix(l,e)];return u.sub(s).normalize()}draw(e){var[t,n,i,a]=this.p;e.beginPath(),e.moveTo(t.x,t.y),e.bezierCurveTo(n.x,n.y,i.x,i.y,a.x,a.y),e.stroke()}}})),n.variable(t()).define(["md"],(function(e){return e`### Bézier demo`})),n.variable(t()).define(["width","DOM","Bezier","bezierControlPoints","Vec"],(function(e,t,n,i,a){let r=9*e/16;const o=t.canvas(e,r),l=o.getContext("2d");let s=()=>{let t=new n(...i);l.clearRect(0,0,e,r),l.lineWidth=4,l.strokeStyle="black",t.draw(l),l.lineWidth=10,l.strokeStyle="green";for(let e of t.p)l.beginPath(),l.moveTo(e.x-5,e.y),l.lineTo(e.x+5,e.y),l.stroke();l.lineWidth=1,l.strokeStyle="red",l.beginPath(),l.moveTo(t.p[0].x,t.p[0].y),l.lineTo(t.p[1].x,t.p[1].y),l.lineTo(t.p[2].x,t.p[2].y),l.lineTo(t.p[3].x,t.p[3].y),l.stroke()},u=null,c=null;return o.onmousedown=e=>{let t=a(e.offsetX,e.offsetY);u=null;for(let n of i)n.dist(t)<10&&(u=n);c=t},o.onmousemove=e=>{if(u&&e.buttons){let t=a(e.offsetX,e.offsetY),n=t.sub(c);u.x+=n.x,u.y+=n.y,s(),c=t}},s(),o})),n.variable(t("bezierControlPoints")).define("bezierControlPoints",["width","Vec"],(function(e,t){let n=9*e/16;return[t(e/5,n/2),t(2*e/5,n/4),t(3*e/5,3*n/4),t(4*e/5,n/2)]})),n.variable(t()).define(["md"],(function(e){return e`## Catmull-Rom splines`})),n.variable(t("CatmullRom")).define("CatmullRom",["Vector"],(function(e){return class{set tension(e){this.tau=e}get tension(){return void 0===this.tau?.5:this.tau}constructor(...e){this.p=e}_blendFactors(e){let t=e,n=e*e,i=n*e,a=this.tension;return[-a*t+2*a*n-a*i,1+(a-3)*n+(2-a)*i,a*t+(3-2*a)*n+(a-2)*i,-a*n+a*i]}point(t){let n=~~t;t%=1;let i=this.p.length,[a,r,o,l]=[this.p[n%i],this.p[(n+1)%i],this.p[(n+2)%i],this.p[(n+3)%i]],[s,u,c,d]=this._blendFactors(t);return new e(a.x*s+r.x*u+o.x*c+l.x*d,a.y*s+r.y*u+o.y*c+l.y*d)}}})),n.variable(t()).define(["md"],(function(e){return e`### Catmull-Rom splines demo`})),n.variable(t()).define(["md","bindSliderNumber","viewof tension","bindCheckbox","viewof closed"],(function(e,t,n,i,a){return e`Tension: ${t({min:0,max:1,step:.1},n)} &nbsp; &nbsp; &nbsp;
${i("",a)} closed`})),n.variable(t()).define(["width","DOM","CatmullRom","catmullControlPoints","tension","closed","Vec"],(function*(e,t,n,i,a,r,o){let l=9*e/16;const s=t.canvas(e,l),u=s.getContext("2d");let c=()=>{let t=new n(...i);t.tension=a,u.clearRect(0,0,e,l),u.lineWidth=4,u.strokeStyle="black";let[o,s]=r?[0,400]:[0,100],c=t.point(o/100);u.beginPath(),u.moveTo(c.x,c.y);for(let e=o;e<s;e++)c=t.point(e/100),u.lineTo(c.x,c.y);u.stroke(),u.lineWidth=10,u.strokeStyle="green";for(let e of t.p)u.beginPath(),u.moveTo(e.x-5,e.y),u.lineTo(e.x+5,e.y),u.stroke();u.lineWidth=1,u.strokeStyle="red",u.beginPath(),u.moveTo(t.p[0].x,t.p[0].y),u.lineTo(t.p[1].x,t.p[1].y),u.lineTo(t.p[2].x,t.p[2].y),u.lineTo(t.p[3].x,t.p[3].y),u.stroke()};c();let d=null,h=null;s.onmousedown=e=>{let t=o(e.offsetX,e.offsetY);d=null;for(let n of i)n.dist(t)<10&&(d=n);h=t},s.onmousemove=e=>{if(d&&e.buttons){let t=o(e.offsetX,e.offsetY),n=t.sub(h);d.x+=n.x,d.y+=n.y,c(),h=t}},yield s})),n.variable(t("catmullControlPoints")).define("catmullControlPoints",["width","Vec"],(function(e,t){let n=9*e/16;return[t(e/5,n/2),t(2*e/5,n/4),t(3*e/5,3*n/4),t(4*e/5,n/2)]})),n.variable(t("viewof closed")).define("viewof closed",["View"],(function(e){return new e(!0)})),n.variable(t("closed")).define("closed",["Generators","viewof closed"],((e,t)=>e.input(t))),n.variable(t("viewof tension")).define("viewof tension",["View"],(function(e){return new e(.5)})),n.variable(t("tension")).define("tension",["Generators","viewof tension"],((e,t)=>e.input(t))),n.variable(t()).define(["md"],(function(e){return e`## Transformation matrices`})),n.variable(t("Matrix")).define("Matrix",["Vec"],(function(e){return class t{constructor(e=1,t=0,n=0,i=1,a=0,r=0){[this.a,this.b,this.c,this.d,this.e,this.f]=[e,t,n,i,a,r]}static translate(e=0,n=0){return new t(1,0,0,1,e,n)}static scale(e=1,n=1){return new t(e,0,0,n)}static shear(e=0,n=0){return new t(1,e,n,1)}static rotate(e=0){let[n,i]=[Math.sin(e),Math.cos(e)];return new t(i,n,-n,i)}apply(t){return e(this.a*t.x+this.c*t.y+this.e,this.b*t.x+this.d*t.y+this.f)}applyPoint(t){return e(this.a*t.x+this.c*t.y+this.e,this.b*t.x+this.d*t.y+this.f)}applyVector(t){return e(this.a*t.x+this.c*t.y,this.b*t.x+this.d*t.y)}mult(e){return new t(this.a*e.a+this.c*e.b,this.b*e.a+this.d*e.b,this.a*e.c+this.c*e.d,this.b*e.c+this.d*e.d,this.a*e.e+this.c*e.f+this.e,this.b*e.e+this.d*e.f+this.f)}inverse(){let{a:e,b:n,c:i,d:a,e:r,f:o}=this,l=e*a-n*i;return l?(l=1/l,new t(a*l,-n*l,-i*l,e*l,(i*o-a*r)*l,(n*r-e*o)*l)):null}}})),n.variable(t()).define(["md"],(function(e){return e`### Matrix Demo`})),n.variable(t("matrixDemoUI")).define("matrixDemoUI",["T"],(function(e){return e.UI()})),n.variable(t("matrixDemoButtons")).define("matrixDemoButtons",["html","mutable T"],(function(e,t){let n=e`<button>Reset</button>`;n.onclick=()=>{t.value=t.value.reset()};let i=e`<button>+ Translate</button>`;i.onclick=()=>{t.value=t.value.addTranslate()};let a=e`<button>+ Scale</button>`;a.onclick=()=>{t.value=t.value.addScale()};let r=e`<button>+ Rotate</button>`;r.onclick=()=>{t.value=t.value.addRotate()};let o=e`<button>+ Shear</button>`;return o.onclick=()=>{t.value=t.value.addShear()},e`${i} ${a} ${r} ${o} ${n}`})),n.variable(t()).define(["tcount","width","DOM","T"],(function(e,t,n,i){let a=9*t/16;const r=n.canvas(t,a).getContext("2d");r.translate(t/2-50,a/2-50),r.font="20px serif",r.clearRect(-t/2+50,-a/2+50,t,a),r.beginPath(),r.moveTo(0,0),r.lineTo(100,0),r.moveTo(0,0),r.lineTo(0,100),r.moveTo(0,0),r.arc(0,0,5,0,2*Math.PI),r.stroke(),r.fill(),r.fillText("y",-15,110),r.fillText("x",110,-10);let o=i.matrix();return r.transform(o.a,o.b,o.c,o.d,o.e,o.f),r.beginPath(),r.arc(50,50,40,0,2*Math.PI),r.stroke(),r.beginPath(),r.arc(50,50,30,Math.PI/4,3*Math.PI/4),r.stroke(),r.beginPath(),r.arc(35,35,4,0,2*Math.PI),r.stroke(),r.beginPath(),r.arc(65,35,4,0,2*Math.PI),r.stroke(),r.globalAlpha=.2,r.fillRect(0,0,100,100),r.canvas})),n.variable(t("matrix")).define("matrix",["tcount","html","T"],(function(e,t,n){return t`<p>Matrix: <\p> ${n.tex()}`})),n.variable(t("Transform")).define("Transform",["html","Vec","Matrix","tex"],(function(e,t,n,i){function a(t={}){let{title:n="",min:i=-100,max:a=100,step:r=1,size:o="20em",value:l=0,callback:s=(()=>0)}=t,u=e`<input type=range min=${i} max=${a} step=${r} style='width:${o}'>`,c=e`<output>${l}</output>`;return u.value=l,u.oninput=e=>{l=u.value,c.value=l,s(l)},e`${n}: ${u} ${c}`}function r(n){let{title:i="",min:r=-100,max:o=100,step:l=1,size:s="10em",value:u=t(0,0),callback:c=(()=>0)}=n,d=a({title:"x",min:r,max:o,step:l,value:u.x,callback:e=>{u.x=+e,c(u)}}),h=a({title:"y",min:r,max:o,step:l,value:u.y,callback:e=>{u.y=+e,c(u)}});return e`${i} &nbsp; ${d} ,&nbsp; ${h}`}function o(e){let t=e=>e.toFixed(4)==e?e:e.toFixed(4);return`\\begin{bmatrix}\n    ${t(e.a)} & ${t(e.c)} & ${t(e.e)} \\\\\n    ${t(e.b)} & ${t(e.d)} & ${t(e.f)} \\\\\n    0 & 0 & 1 \n    \\end{bmatrix}`}return class{constructor(e=(e=>{})){this.callback=e,this.matrices=[],this.sliders=[]}reset(){return this.matrices=[],this.sliders=[],this.callback(this),this}addTranslate(){let e=this.matrices.length;return this.matrices.push(new n),this.sliders.push(r({title:"Translate ",min:-100,max:100,step:1,value:t(0,0),callback:t=>{this.matrices[e]=n.translate(t.x,t.y),this.callback(this)}})),this}addScale(){let e=this.matrices.length;return this.matrices.push(new n),this.sliders.push(r({title:"Scale ",min:.2,max:4,step:.2,value:t(1,1),callback:t=>{this.matrices[e]=n.scale(t.x,t.y),this.callback(this)}})),this}addShear(){let e=this.matrices.length;return this.matrices.push(new n),this.sliders.push(r({title:"Shear ",min:-4,max:4,step:.2,value:t(0,0),callback:t=>{this.matrices[e]=n.shear(t.x,t.y),this.callback(this)}})),this}addRotate(){let e=this.matrices.length;return this.matrices.push(new n),this.sliders.push(a({title:"Rotate",min:-180,max:180,step:5,value:0,callback:t=>{this.matrices[e]=n.rotate(Math.PI*t/180),this.callback(this)}})),this}UI(){let t=e`<div></div>`;for(let n of this.sliders)t.append(n),t.append(e`<br>`);return t}matrix(){return 0==this.matrices.length?new n:1==this.matrices.length?this.matrices[0]:this.matrices.reduce(((e,t)=>e.mult(t)))}tex(){return this.matrices.length<2?i`${o(this.matrix())}`:i`${this.matrices.map(o).join("\\times")+"="+o(this.matrix())}`}}})),n.define("initial T",["Transform","mutable tcount"],(function(e,t){return new e((()=>{t.value++}))})),n.variable(t("mutable T")).define("mutable T",["Mutable","initial T"],((e,t)=>new e(t))),n.variable(t("T")).define("T",["mutable T"],(e=>e.generator)),n.define("initial tcount",(function(){return 0})),n.variable(t("mutable tcount")).define("mutable tcount",["Mutable","initial tcount"],((e,t)=>new e(t))),n.variable(t("tcount")).define("tcount",["mutable tcount"],(e=>e.generator)),n.variable(t()).define(["md"],(function(e){return e`## Minimum Bounding Rectangles
Represented by instances of class \`MBR\``})),n.variable(t("MBR")).define("MBR",["Vector"],(function(e){return class t{constructor(){this.min=new e(Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY),this.max=new e(Number.NEGATIVE_INFINITY,Number.NEGATIVE_INFINITY);for(let e of arguments)this.add(e)}valid(){return this.min.x<=this.max.x&&this.min.y<=this.max.y}size(){return new e(this.max.x-this.min.x,this.max.y-this.min.y)}add(e){this.min.x=Math.min(e.x,this.min.x),this.min.y=Math.min(e.y,this.min.y),this.max.x=Math.max(e.x,this.max.x),this.max.y=Math.max(e.y,this.max.y)}contains(e,t=0){return e.x+t>=this.min.x&&e.y+t>=this.min.y&&e.x-t<this.max.x&&e.y-t<this.max.y}pointDist(e){let t=Math.max(this.min.x-e.x,0,e.x-this.max.x),n=Math.max(this.min.y-e.y,0,e.y-this.max.y);return Math.sqrt(t*t+n*n)}intersects(e){return!(Math.max(e.min.x,this.min.x)>=Math.min(e.max.x,this.max.x))&&Math.max(e.min.y,this.min.y)<Math.min(e.max.y,this.max.y)}intersection(e){let n=new t;return n.min.x=Math.max(e.min.x,this.min.x),n.max.x=Math.min(e.max.x,this.max.x),n.min.y=Math.max(e.min.y,this.min.y),n.max.y=Math.min(e.max.y,this.max.y),n}union(e){let n=new t;return n.min.x=Math.min(e.min.x,this.min.x),n.max.x=Math.max(e.max.x,this.max.x),n.min.y=Math.min(e.min.y,this.min.y),n.max.y=Math.max(e.max.y,this.max.y),n}draw(e){let t=this.size();e.beginPath(),e.rect(this.min.x,this.min.y,t.x,t.y),e.stroke()}}})),n.variable(t()).define(["DOM","width","MBR","Vec"],(function*(e,t,n,i){const a=e.canvas(t,9*t/16),r=a.getContext("2d");let o=new n(i(10,10),i(110,110)),l=new n(i(50,50),i(260,260));r.lineWidth=6,r.strokeStyle="black",o.draw(r),r.strokeStyle="blue",l.draw(r),r.lineWidth=3,r.strokeStyle="orange",o.union(l).draw(r),r.strokeStyle="pink",o.intersection(l).draw(r),yield a})),n.variable(t()).define(["md"],(function(e){return e`## Libraries`}));const i=e.module(r);return n.import("View",i),n.import("bindSliderNumber",i),n.import("bindCheckbox",i),n.variable(t()).define(["html"],(function(e){return e`<style>
button {
  font: 16px Serif;
}
</style>`})),n}function l(e,t){const n=e.module();return n.variable(t()).define(["md"],(function(e){return e`# Range input variations

Since the introduction of the official [observable inputs](https://observablehq.com/@observablehq/inputs), we have a standard set of input components to use in notebooks (and elsewhere). The \`Inputs.range\` component, in particular, provides a range input linked to a number input, which is very nice, but takes a lot of horizontal space. This is a study of how we can define range inputs with a smaller horizontal footprint, so that many inputs can be displayed side by side. `})),n.variable(t()).define(["md"],(function(e){return e`<hr>
## The vanilla range input

Here's an example of how we can instance a vanilla range input.`})),n.variable(t("viewof ex0")).define("viewof ex0",["htl"],(function(e){return e.html`<input type=range min=1 max=40 step=1 value=30 style="width:100px">`})),n.variable(t("ex0")).define("ex0",["Generators","viewof ex0"],((e,t)=>e.input(t))),n.variable(t()).define(["ex0"],(function(e){return e})),n.variable(t()).define(["md"],(function(e){return e`## Packing inputs into one cell

Usually inputs are defined in separate cells, especially if we want to take advantage of the \`viewof\` construct. Since cells are necessarily stacked vertically, however, we can resort to some other way to pack inputs side by side. One such approach is implemented below.`})),n.variable(t("viewof ex1")).define("viewof ex1",["pack","htl"],(function(e,t){return e({things:t.html`<input type=range min=1 max=40 step=1 value=30 style="width:100px">`,items:t.html`<input type=range min=1 max=40 step=1 value=30 style="width:100px">`,goodness:t.html`<input type=range min=1 max=40 step=1 value=30 step=0.1 style="width:100px">`})})),n.variable(t("ex1")).define("ex1",["Generators","viewof ex1"],((e,t)=>e.input(t))),n.variable(t()).define(["ex1"],(function(e){return e})),n.variable(t()).define(["md"],(function(e){return e`**pack (*inputs*, *options*)**<br>
 Returns a component showing many inputs. The *inputs* argument should be an object where each field is
 an input; the component's value is one such object, containing the current
 value of each field. The *options* argument is an object with 0 or more of the following fields:
 - \`sep\` is the number of pixels that is added to separate inputs horizontally (default: 10).
 - \`style\` is a css string with additional styles to be applied to the wrapper div containing the inputs.
`})),n.variable(t("pack")).define("pack",["htl"],(function(e){return function(t,n={}){const{sep:i=10,style:a=""}=n,r=e.html`<div style=${"display:inline-flex;align-items:center;"+a}></div>`;r.value={};const o=[...Object.entries(t)];return o.forEach((([t,n],a)=>{r.value[t]=n.value,n.addEventListener("input",(e=>{r.value[t]=n.value,r.dispatchEvent(new CustomEvent("input"))})),r.append(n),i&&a<o.length-1&&r.append(e.html`<div style="width:${i}px;display:inline-block;">`)})),r}})),n.variable(t()).define(["md"],(function(e){return e`## Displaying the current value

The vanilla input is disappointingly bare, since it doesn't even show the input value. To remedy this, we must add another element which will mirror the input's value and is updated as you move the slider. `})),n.variable(t()).define(["Range"],(function(e){return e([1,10])})),n.variable(t()).define(["Range"],(function(e){return e([1,10],{label:"Things:"})})),n.variable(t()).define(["Range"],(function(e){return e([1,10],{step:.1,value:3.4,format:e=>e.toFixed(1)+" Things"})})),n.variable(t()).define(["Range"],(function(e){return e([1,10],{style:"padding:5px;border:1px dashed gray"})})),n.variable(t()).define(["Range"],(function(e){return e([1,10],{label:"Things:",vertical:!0})})),n.variable(t("viewof ex2")).define("viewof ex2",["pack","Range"],(function(e,t){return e({things:t([1,10],{label:"things:"}),items:t([0,20],{label:"items:"}),goodness:t([0,5],{step:.1,label:"goodness:"})})})),n.variable(t("ex2")).define("ex2",["Generators","viewof ex2"],((e,t)=>e.input(t))),n.variable(t()).define(["ex2"],(function(e){return e})),n.variable(t()).define(["md"],(function(e){return e`**Range( *range* , *?options* )**<br>
Creates a range input with the value displayed on its left.
- *range*: an array in the form \\[min,max\\].
- *options*: an object containing 0 or more of the following fields:
  - \`label\`: a string that will be displayed to the left of the slider (default: no label).
  - \`format\`: a function that will be applied to the value before displaying it (default: identity).
  - \`className\`: name of css class attribute to be used for the component (default:"Range"). 
  - \`step\`: value increment (default: 1).
  - \`value\`: initial value (default: (min+max)/2).
  - \`style\`: additional css string to be applied to the component as a whole.
  - \`labelStyle\`: additional css string to be applied to the label.
  - \`rangeStyle\`: additional css string to be applied to the slider part of the component.
  - \`valueStyle\`: additional css string to be applied to the label/value part of the component.
`})),n.variable(t("Range")).define("Range",["htl"],(function(e){return function(t,n={}){const[i,a]=t,{className:r="Range",vertical:o=!1,label:l=null,format:s=(e=>+e),step:u=1,value:c=(i+a)/2,style:d="",labelStyle:h="",rangeStyle:f="",valueStyle:p=""}=n,m=e.html`<div class=${r} style="${d}"></div>`;Object.assign(m.style,{display:"inline-flex",position:"relative",userSelect:"none"});const b=e.html`<output style="${p}">`;Object.assign(b.style,{display:"inline-block"});const v=e.html`<input type=range min=${i} max=${a} step=${u} value=${c} style=${f}>`;return Object.assign(v.style,{display:"inline-block"}),o&&(v.setAttribute("orient","vertical"),v.style.writingMode="bt-lr",v.style["-webkit-appearance"]="slider-vertical",v.style.width="8px"),m.append(v,b),l&&m.prepend(e.html`<label style=${h}>${l}`),v.oninput=()=>{b.innerHTML=s(v.valueAsNumber),m.value=m.valueAsNumber=+v.valueAsNumber,m.dispatchEvent(new CustomEvent("input"))},v.oninput(),m}})),n.variable(t()).define(["md"],(function(e){return e`## Styling
The range components implemented here try to use minimal inline styling, relying instead on styles associated with css class \`Range\`, the default. 
Below is a suggestion of additional styling, which you may or may not import along with the functions that implement the components. If you import \`rangeStyles\`, the examples will look as they do here. Otherwise, you may write your own styles associated with class \`Range\`. Another possibility is to specify another \`className\` in the options and style that instead. `})),n.variable(t("rangeStyles")).define("rangeStyles",["htl"],(function(e){return e.html`<style>
  .Range, .Popup {
     display: inline-flex;
     align-items:center;
     font-family:sans-serif;
     font-size: 10pt;
  }
  .Range input[type=range] {
     width:100px;
  }
  .Range input[type=range][orient=vertical] {
     width:8px;
     height:100px;
  }
  .Range label {
     margin-right: 5px;
  }
  .Range output {
     margin-left:5px;
  }
  .Popup button{
   margin-right:10px;
  }
</style>
`})),n.variable(t()).define(["Range"],(function(e){return e([1,10],{label:"Things: "})})),n.variable(t()).define(["Range"],(function(e){return e([1,10],{label:"Things: ",className:"NoStyle"})})),n.variable(t()).define(["Range"],(function(e){return e([1,10],{label:"Things",className:"Custom"})})),n.variable(t("customStyles")).define("customStyles",["htl"],(function(e){return e.html`<style>
  .Custom {
     font-family:monospace;
     font-weight:bold;
     font-size: 12pt;
     background:#eee;
     padding:0.5em 1em;
     border:4px outset #ccc;
  }
  .Custom input[type=range] {
     width:120px; 
  }
  .Custom label {
     margin-right: 5px;
  }
  .Custom output {
     margin-left:5px;
  }
</style>
`})),n.variable(t()).define(["md"],(function(e){return e`## Adding a floating current value display

Another way to display the value is have it float above the slider handle like a bubble, so that it does not occupy too much horizontal space.
Here I borrow (or rather, steal) some ideas from [this css-tricks post](https://css-tricks.com/value-bubbles-for-range-inputs/).`})),n.variable(t()).define(["BubbleRange"],(function(e){return e([1,10])})),n.variable(t()).define(["BubbleRange"],(function(e){return e([1,10],{format:e=>e+" things",vertical:!0})})),n.variable(t()).define(["pack","BubbleRange"],(function(e,t){return e({things:t([1,10],{label:"things:",value:10}),items:t([0,20],{label:"items:"}),goodness:t([0,5],{step:.1,label:"goodness:"})})})),n.variable(t()).define(["pack","BubbleRange"],(function(e,t){return e({things:t([1,10],{vertical:!0,label:"things:"}),items:t([0,20],{vertical:!0,label:"items:"}),goodness:t([0,5],{vertical:!0,step:.1,label:"goodness:"})},{sep:35})})),n.variable(t()).define(["md"],(function(e){return e`**BubbleRange( *range* , *?options* )**<br>
Creates a range input with a value display bubble floating above (or beside) the slider cursor.
- *range*: an array in the form \\[min,max\\].
- *options*: an object containing 0 or more of the following fields:
  - \`label\`: a string that will be displayed before the slider (default: no label).
  - \`format\`: a function that will be applied to the value before displaying it (default: identity).
  - \`vertical\`: if true, generates a vertical input (default: false). Thanks [@tomlankworthy](https://observablehq.com/@tomlarkworthy/vertical-sliders)!
  - \`className\`: name of css class attribute to be used for the component (default:\`Range\`). 
  - \`step\`: value increment (default: 1).
  - \`value\`: initial value (default: (min+max)/2).
  - \`style\`: additional css string to be applied to the component as a whole.
  - \`labelStyle\`: additional css string to be applied to the label.
  - \`rangeStyle\`: additional css string to be applied to the slider part of the component.
  - \`valueStyle\`: additional css string to be applied to the label/value part of the component.`})),n.variable(t("BubbleRange")).define("BubbleRange",["htl","ResizeObserver"],(function(e,t){return function(n,i={}){const[a,r]=n,{label:o=null,vertical:l=!1,className:s="Range",style:u="",valueStyle:c="",rangeStyle:d="",labelStyle:h="",step:f=1,value:p=(a+r)/2,format:m=(e=>e)}=i,b=e.html`<div class=${s} style=${u}>`;Object.assign(b.style,{display:"inline-flex",position:"relative"});const v=e.html`<span style=${c}>`;l?Object.assign(v.style,{position:"absolute",width:"max-content",transform:"translateY(50%)",left:"150%"}):Object.assign(v.style,{position:"absolute",width:"fit-content",transform:"translateX(-50%)",bottom:"100%"});const y=e.html`<input type=range min=${a} max=${r} step=${f} value=${p} style=${d}>`;l&&(y.setAttribute("orient","vertical"),y.style.writingMode="bt-lr",y.style["-webkit-appearance"]="slider-vertical",y.style.width="8px"),b.append(e.html`<div style="position:relative;display:inline-block">${y}${v}</div>`),o&&b.prepend(e.html`<label style=${h}>${o}`);const g=()=>{const e=y.valueAsNumber,t=Number(100*(e-a)/(r-a));if(v.innerHTML=m(e),b.value=e,b.dispatchEvent(new CustomEvent("input")),l)v.style.bottom=`calc(${t}% + (${8-.15*t}px))`;else{v.style.left=`calc(${t}% + (${8-.15*t}px))`;const{width:e,height:n}=y.getBoundingClientRect(),{width:i,height:a}=v.getBoundingClientRect();t/100*e<i/2?v.style.left=i/2+"px":t/100*e+i/2>e&&(v.style.left=e-i/2+"px")}};let w;return w=new t((()=>{g(),w.disconnect()})),w.observe(b),y.addEventListener("input",(()=>{g()})),g(),b}})),n.variable(t()).define(["md"],(function(e){return e`## Hiding and showing inputs with a button

As a last trick, one can simply hide the input interface, revealing it only when a button is pressed. Clicking the button again hides it.
`})),n.variable(t()).define(["pack","HideInput","BubbleRange","d3","htl"],(function(e,t,n,i,a){return e({things:t("things",n([1,10])),items:t("items",n([0,30])),goodness:t("goodness",n([0,5],{step:.1,format:i.format("0.1f")})),howmuch:t("how much?",a.html`<input type=text value="very much indeed">`)},{sep:20})})),n.variable(t()).define(["pack","HideInput","Range","d3","htl"],(function(e,t,n,i,a){return e({things:t("things",n([1,10],{vertical:!0})),items:t("items",n([0,30],{vertical:!0})),goodness:t("goodness",n([0,5],{step:.1,vertical:!0,format:i.format("0.1f")})),howmuch:t("how much?",a.html`<input type=text value="very much indeed">`)},{sep:20})})),n.variable(t()).define(["pack","HideInput","Range","d3","htl"],(function(e,t,n,i,a){return e({things:t("things",n([1,10],{vertical:!0}),{pop:!0}),items:t("items",n([0,10],{vertical:!0}),{pop:!0}),goodness:t("goodness",n([0,5],{step:.1,vertical:!0,format:i.format("0.1f")}),{pop:!0}),howmuch:t("how much?",a.html`<input type=text value="very much indeed">`)},{sep:20,style:"border:1px solid gray;min-height:80px;padding:0 10px;"})})),n.variable(t("a")).define("a",["Range"],(function(e){return e([1,2])})),n.variable(t()).define(["a"],(function(e){return e.querySelector("span")})),n.variable(t()).define(["md"],(function(e){return e`**HideInput( *buttonLabel* , *input*, *?options* )**<br>
Adds a button that hides or shows a given input component.

- *buttonLabel*: label for the hide/show button.
- *input*: input component to be hidden/shown.
- *options*: an object containing 0 or more of the following fields:
  - \`group\`: name of a hide/show group. This is used to synchronize the display of several hidden, so that only 
     one input of each group is shown at any one time. Default: \`hideGroup\`.
  - \`pop\`: if true, the input is placed into a floating div so that it does not occupy vertical space. This is specially useful for vertical ranges, so that the input may overlap content above/below. Default: \`false\`.
  - \`style\`: additional css string to be applied to the component as a whole.
  - \`buttonStyle\`: additional css string to be applied to the button.
`})),n.variable(t("HideInput")).define("HideInput",["htl"],(function(e){return function(t,n,i={}){const{group:a="hideGroup",pop:r=!1,popWidth:o=null,style:l="",buttonStyle:s=""}=i,u=e.html`<div class=Popup style=${l} group=${a}>`,c=e.html`<button style=${s}>${t}`,d=e.html`<div style="position:relative;display:none;">`;d.append(n),r&&(n.style.position="absolute",n.style.zIndex=10);const h=e.html`<output style="display:inline-block;">`,f=n.querySelector("output");c.onclick=()=>{const[e,t]=[(i=d.style.display,"none"==i?"inline-block":"none"),d.style.display];var i;for(let n of document.querySelectorAll(`div[group=${a}].Popup`))n.children[1].style.display="none",n.children[2].style.display="inline-block";if(d.style.display=e,"none"!=e&&r){const{width:e,height:t}=n.getBoundingClientRect();n.style.bottom=-t/2+"px",d.style.width=(o||e)+"px"}h.style.display=t};const p=()=>{u.value=n.value,u.valueAsNumber=n.valueAsNumber,h.value=f?f.value:n.value,u.dispatchEvent(new CustomEvent("input"))};return n.addEventListener("input",p),u.append(c,d,h),p(),u}})),n}function s(e,t){const n=e.module();return n.variable(t()).define(["md"],(function(e){return e`# Buttons GUI

A short repertoire of inputs shown as buttons containing text/pictures. See examples below.`})),n.variable(t("viewof check")).define("viewof check",["checkButton"],(function(e){return e("\ud83d\udd19",{name:"Undo"})})),n.variable(t("check")).define("check",["Generators","viewof check"],((e,t)=>e.input(t))),n.variable(t()).define(["check"],(function(e){return e})),n.variable(t("trash")).define("trash",["actionButton","mutable trashed"],(function(e,t){return e("\ud83d\uddd1\ufe0f",{name:"trash",callback:()=>t.value++})})),n.define("initial trashed",(function(){return 0})),n.variable(t("mutable trashed")).define("mutable trashed",["Mutable","initial trashed"],((e,t)=>new e(t))),n.variable(t("trashed")).define("trashed",["mutable trashed"],(e=>e.generator)),n.variable(t("viewof foobar")).define("viewof foobar",["radioGroup"],(function(e){return e(["f","b","x"],{names:["foo","bar","xpto"]})})),n.variable(t("foobar")).define("foobar",["Generators","viewof foobar"],((e,t)=>e.input(t))),n.variable(t()).define(["foobar"],(function(e){return e})),n.variable(t("viewof thick")).define("viewof thick",["radioGroup"],(function(e){return e([1,2,5,20,40],{value:2,size:40,draw:(e,t)=>{e.strokeStyle="black",e.lineWidth=t,e.beginPath(),e.moveTo(0,0),e.lineTo(100,100),e.stroke()}})})),n.variable(t("thick")).define("thick",["Generators","viewof thick"],((e,t)=>e.input(t))),n.variable(t()).define(["thick"],(function(e){return e})),n.variable(t("viewof color")).define("viewof color",["radioGroup"],(function(e){return e(["black","lightgray","gray","white","red","green","blue","yellow","magenta","cyan"],{value:"red",size:14,columns:5,style:"border-color:#eeeeee;border-radius:6px;padding:5px;background:#eeeeee;",buttonStyle:"display:inline; padding:1px; margin:1px; border-radius:40%;",draw:(e,t)=>{e.fillStyle=t,e.fillRect(0,0,100,100)}})})),n.variable(t("color")).define("color",["Generators","viewof color"],((e,t)=>e.input(t))),n.variable(t()).define(["color"],(function(e){return e})),n.variable(t()).define(["md"],(function(e){return e`## Implementation`})),n.variable(t("checkButton")).define("checkButton",["htl"],(function(e){return function(t,n={}){let{size:i=30,draw:a=null,value:r=!1,style:o="",name:l=null}=n;l=l||t;let s=e.html`<canvas width=${i} height=${i} style=${o} title=${l}>`;const u=()=>{s.style.cursor="pointer",s.value?(s.style.border="2px inset gray",s.style.background="lightgray"):(s.style.border="2px solid #eeeeee",s.style.background=null)};return s.value=r,u(),a=a||((e,t)=>{e.textAlign="center",e.textBaseline="top",e.font=.9*i+"px sans-serif",e.fillStyle="black",e.fillText(t,i/2,.1*i)}),a(s.getContext("2d"),t),s.setValue=e=>{s.value=r=e,u()},s.onclick=()=>{s.value=!s.value,u(),s.dispatchEvent(new CustomEvent("input"))},s}})),n.variable(t("actionButton")).define("actionButton",["checkButton","htl"],(function(e,t){return function(n,i={}){let a=e(n,i),r=t.html`<div>${a}`;return a.oninput=e=>{i.callback&&i.callback(n),setTimeout((()=>a.setValue(!1)),100)},r}})),n.variable(t("radioGroup")).define("radioGroup",["checkButton","htl"],(function(e,t){return function(n,i={}){let{names:a=[...n]}=i,{value:r=a[0],draw:o=null,size:l=30,style:s="",buttonStyle:u="",columns:c=1e3}=i,d=[...n].map(((t,n)=>e(t,{size:l,draw:o,style:u,value:r==a[n],name:a[n]}))),h=t.html`<div style=${s}>`;h.style.width="fit-content";let f=t.html`<table>`;f.style.width="fit-content",f.style.margin=0;h.append(f);d.length;let p=null;return d.forEach(((e,n)=>{n%c==0&&(p=t.html`<tr>`,f.append(p)),p.append(t.html`${e}`)})),h.setValue=e=>{h.value=r=e,d.forEach(((e,t)=>e.setValue(a[t]==h.value)))},d.forEach(((e,t)=>{e.oninput=()=>{h.setValue(a[t]),h.dispatchEvent(new CustomEvent("input"))}})),h.value=r,h}})),n}function u(e,t){const i=e.module(),a=new Map([["minidraw.png",new URL(n(5117),n.b)]]);i.builtin("FileAttachment",e.fileAttachments((e=>a.get(e)))),i.variable(t()).define(["FileAttachment","md"],(async function(e,t){return t`# Mini-draw

${await e("minidraw.png").image()}
This implements a pretty minimal drawing program where you can draw freehand lines. You can choose the pen speed, width and color using a simple interface. Other than that, only 'clear' and 'undo' operations are supported. The idea is to use this in other notebooks for image 
annotation or other purposes. 

Personally, I intend to use it for teaching classes online in place of *other whiteboard apps*, such as [jamboard](https://jamboard.google.com) or [wbo](https://wbo.ophir.dev). The reason I think this might work better for me is due to the pen speed being implemented using the [Dynadraw](https://observablehq.com/@esperanc/dynadraw) mechanism. It helps people with zero artistic skills such as I to draw more or less straight lines using only the mouse. 

Incidentally, if you want to use it as a standalone web app, there's a sample embedding of this notebook at https://cesperanca.org/minidraw.

**Documentation:** The \`miniDraw()\` function creates a full drawing widget with a menu and line settings interface. The value of the widget is its canvas, so you can use it as an input that returns an image. The function accepts an *options* object. At present, the only recognized options are \`width\` and \`height\` that set the size of the canvas. The defaults are the width of the page and the height as 9/16 of the width. 

See sample usage below.`})),i.variable(t("viewof sampleMiniDraw")).define("viewof sampleMiniDraw",["miniDraw","invalidation"],(function(e,t){const n=e();return t.then((()=>n.cleanup())),n})),i.variable(t("sampleMiniDraw")).define("sampleMiniDraw",["Generators","viewof sampleMiniDraw"],((e,t)=>e.input(t))),i.variable(t()).define(["md"],(function(e){return e`## Implementation`})),i.variable(t("icons")).define("icons",(function(){return{trash:"\ud83d\uddd1\ufe0f",slow:"\ud83d\udc22",medium:"\ud83d\udeb6",fast:"\ud83d\udc06",pen:"\ud83d\udd8b\ufe0f",erase:"\u2716\ufe0f",fill:"\ud83d\udca7",undo:"\u21a9\ufe0f"}})),i.variable(t("menu")).define("menu",["htl"],(function(e){return function(t){const n=e.html`<input type=button value="Clear">`,i=e.html`<input type=button value="Undo">`;return n.onclick=()=>{t.clear(),t.draw()},i.onclick=()=>{t.pop(),t.draw()},e.html`<div>${n} ${i}`}})),i.variable(t("menuAlt")).define("menuAlt",["actionButton","icons","htl"],(function(e,t,n){return function(i){const a=e(t.trash,{name:"Clear"}),r=e(t.undo,{name:"Undo"});return a.onclick=()=>{i.clear(),i.draw()},r.onclick=()=>{i.pop(),i.draw()},n.html`<div style="display:inline-flex;">${a} ${r}`}})),i.variable(t("settings")).define("settings",["pack","HideInput","Inputs","pens","BubbleRange","colorInput"],(function(e,t,n,i,a,r){return function(){return e({mode:t("mode",n.radio(["write","erase"],{value:"write"})),speed:t("speed",n.radio(Object.keys(i),{value:"medium"})),lineWidth:t("line width",a([1,40],{value:2,step:1})),color:t("color",r("#000000"))})}})),i.variable(t("settingsAlt")).define("settingsAlt",["htl","pack","radioGroup","icons","pens","colorInput"],(function(e,t,n,i,a,r){return function(){const o=()=>e.html`<div style="min-width:3px;min-height:20px;margin:2px 10px;border-color:gray;border-style:none solid;border-width:1px;display:flex; flex-direction: column">`;return t({mode:n([i.pen,i.fill,i.erase],{names:["write","fill","erase"]}),dummy:o(),speed:n([i.slow,i.medium,i.fast],{names:Object.keys(a),value:"medium"}),dummy2:o(),lineWidth:n([1,2,5,10,20,40],{value:2,draw:(e,t)=>{e.strokeStyle="black",e.lineWidth=t,e.beginPath(),e.moveTo(0,0),e.lineTo(100,100),e.stroke()}}),dummy3:o(),color:r("#000000")},{sep:0})}})),i.variable(t("controls")).define("controls",["menu","settings","htl","rangeStyles"],(function(e,t,n,i){return function(a){const r=e(a),o=t(),l=n.html`<div>${i}<div style="display:inline-flex">${r}
<div style="display: flex; flex-direction: column;justify-content: center;font:bold 11pt sans-serif;text-align:right;width:4em;">Pen:&nbsp;</div>
${o}</div>`;return o.oninput=()=>{l.value=o.value,l.dispatchEvent(new CustomEvent("input"))},l.value=o.value,l}})),i.variable(t("controlsAlt")).define("controlsAlt",["menuAlt","settingsAlt","htl"],(function(e,t,n){return function(i){const a=e(i),r=t(),o=n.html`<div style="display:inline-flex">${a}${n.html`<div style="min-width:3px;margin:2px 10px;background:gray;display:flex; flex-direction: column">`}${r}</div>`;return r.oninput=()=>{o.value=r.value,o.dispatchEvent(new CustomEvent("input"))},o.value=r.value,o}})),i.variable(t("pens")).define("pens",(function(){return{slow:{mass:20,drag:.5},medium:{mass:5,drag:.5},fast:{mass:1,drag:.7}}})),i.variable(t("DynLine")).define("DynLine",["Vec"],(function(e){return class{constructor(t={}){let{mass:n=5,drag:i=.5}=t;Object.assign(this,{mass:n,drag:i,active:!1,pos:e(0,0),prev:e(0,0),vel:e(0,0)})}start(t){this.pos=this.prev=t,this.vel=e(0,0),this.active=!1}move(e){this.active=!1;let t=e.sub(this.pos).scale(1/this.mass);return!(t.mag()<.01)&&(this.vel=this.vel.add(t).scale(1-this.drag),!(this.vel.mag()<.1)&&(this.prev=this.pos,this.pos=this.pos.add(this.vel),this.active=!0,!0))}}})),i.variable(t("Drawing")).define("Drawing",["htl"],(function(e){return class{constructor(t={}){let{width:n=800,height:i=600}=t,a=e.html`<canvas tabindex=1 width=${n} height=${i} style="border:1px solid gray">`,r=a.getContext("2d");Object.assign(this,{width:n,height:i,contents:[],canvas:a,ctx:r,cacheInfo:null})}add(e){this.contents.push(e)}clear(){this.contents=[],this.cacheInfo=null}get length(){return this.contents.length}draw(){let e=0;if(this.cacheInfo){let{last:t,imgData:n}=this.cacheInfo;this.ctx.putImageData(n,0,0),e=t+1}else this.ctx.clearRect(0,0,this.width,this.height);for(let t=e;t<this.contents.length;t++){this.contents[t].draw(this.ctx)}this.canvas.dispatchEvent(new CustomEvent("input"))}cache(){this.cacheInfo=null,this.draw(),this.cacheInfo={last:this.contents.length-1,imgData:this.ctx.getImageData(0,0,this.width,this.height)}}top(){return this.contents[this.length-1]}pop(){return this.cacheInfo=null,this.contents.pop()}}})),i.variable(t("miniDraw")).define("miniDraw",["width","Drawing","controlsAlt","htl","DynLine","pens","Vec","FillArea","StyledLine"],(function(e,t,n,i,a,r,o,l,s){return function(u={}){const c=u.width||e,d=u.height||9*c/16,h=new t({width:c,height:d}),f=n(h),p=i.html`<div>${f}<br>${h.canvas}`;p.value=h.canvas;let m=new a(r[f.value.speed]),b=null,v=o(0,0);const y=()=>h.draw(),g=e=>o(e.offsetX,e.offsetY);h.canvas.onmousedown=e=>{v=g(e),h.cache(),"fill"==f.value.mode?(h.add(new l(v,{color:f.value.color})),y()):(m.start(v),b=[v],h.add(new s(b,f.value)))},h.canvas.onmousemove=e=>{"fill"!=f.value.mode&&e.buttons&&(v=g(e),m.move(v))},h.canvas.onkeydown=e=>{e.preventDefault(),90==e.keyCode&&(e.ctrlKey||e.metaKey)&&(h.pop(),h.draw())},h.canvas.oninput=e=>{p.dispatchEvent(new CustomEvent("input"))};f.oninput=()=>{m=new a(r[f.value.speed])};const w=setInterval((()=>{m.active&&(b.push(m.pos),m.move(v),y())}),1e3/60);return p.cleanup=()=>{clearInterval(w)},p}})),i.variable(t("StyledLine")).define("StyledLine",(function(){return class{constructor(e=[],t={}){let{color:n="#000",mode:i="write",lineWidth:a=1,lineJoin:r="round",lineCap:o="round"}=t;Object.assign(this,{points:e,color:n,lineWidth:a,lineJoin:r,lineCap:o,mode:i})}get geometry(){return this.points}set geometry(e){this.points=e}draw(e){e.lineWidth=this.lineWidth,e.strokeStyle=this.color,e.lineCap=this.lineCap,e.lineJoin=this.lineJoin,"erase"==this.mode&&(e.globalCompositeOperation="destination-out"),e.beginPath();for(let t of this.points)e.lineTo(t.x,t.y);e.stroke(),"erase"==this.mode&&(e.globalCompositeOperation="source-over")}}})),i.variable(t("FillArea")).define("FillArea",["floodFill","colorToInt"],(function(e,t){return class{constructor(e,t={}){let{color:n="green"}=t;Object.assign(this,{seed:e,color:n})}draw(n){e(n,this.seed.x,this.seed.y,t(this.color))}}})),i.variable(t()).define(["colorToInt"],(function(e){return e("blue")})),i.variable(t("colorInput")).define("colorInput",["Inputs"],(function(e){return function(t){let n=e.color({value:t,datalist:[]});return n.style.maxWidth="80px",n.querySelector("output").style.visibility="hidden",n}})),i.variable(t("palette")).define("palette",(function(){return["black","lightgray","gray","white","red","orange","yellow","green","brown","blue","magenta","cyan"]})),i.variable(t("floodFill")).define("floodFill",["alpha"],(function(e){function t(e,t,n){return t<0||n<0||t>=e.width||n>=e.height?-1:e.data[n*e.width+t]}return function(n,i,a,r){const o=n.getImageData(0,0,n.canvas.width,n.canvas.height),l={width:o.width,height:o.height,data:new Uint32Array(o.data.buffer)},s=t(l,i,a);let u;if(u=e(s)<=128&&255==e(r)?t=>e(t)<=128:e=>e===s,s!==r){const e=[];function c(t,n,i,a){e.push({left:t,right:n,y:i,direction:a})}function d(e,n,i,a){let r,o,s=!1;for(o=e;o<n;++o){const e=t(l,o,i);u(e)?s||(s=!0,r=o):s&&(s=!1,c(r,o-1,i,a))}s&&(s=!1,c(r,o-1,i,a))}for(c(i,i,a,0);e.length>0;){const{left:n,right:i,y:a,direction:o}=e.pop();let u=n;for(;;){--u;if(t(l,u,a)!==s)break}++u;let c=i;for(;;){++c;if(t(l,c,a)!==s)break}const h=a*l.width;l.data.fill(r,h+u,h+c),o<=0?d(u,c,a-1,-1):(d(u,n,a-1,-1),d(i,c,a-1,-1)),o>=0?d(u,c,a+1,1):(d(u,n,a+1,1),d(i,c,a+1,1))}n.putImageData(o,0,0)}}})),i.variable(t("colorToInt")).define("colorToInt",["d3"],(function(e){return function(t){let{r:n,g:i,b:a,opacity:r}=e.color(t);return 256*(256*(256*~~(255*r)+a)+i)+n}})),i.variable(t("rgbaToInt")).define("rgbaToInt",(function(){return function(e,t,n,i){let a=new Uint8Array([e,t,n,i]);return new Uint32Array(a.buffer)[0]}})),i.variable(t("alpha")).define("alpha",(function(){let e=new Uint8Array(4),t=new Uint32Array(e.buffer);return function(n){return t[0]=n,e[3]}})),i.variable(t("intToRgba")).define("intToRgba",(function(){return function(e){let t=new Uint32Array([e]);return new Uint8Array(t.buffer)}})),i.variable(t()).define(["alpha","rgbaToInt"],(function(e,t){return 255==e(t(0,0,0,255))})),i.variable(t()).define(["intToRgba","colorToInt"],(function(e,t){return e(t("blue"))})),i.variable(t()).define(["DOM","floodFill","colorToInt"],(function(e,t,n){const i=e.context2d(300,300,1);return i.beginPath(),i.moveTo(20,20),i.lineTo(250,70),i.lineTo(270,120),i.lineTo(170,140),i.lineTo(100,145),i.lineTo(110,105),i.lineTo(130,125),i.lineTo(190,80),i.lineTo(100,60),i.lineTo(50,130),i.lineTo(20,20),i.stroke(),t(i,40,50,n("blue")),i.canvas})),i.variable(t()).define(["md"],(function(e){return e`## Dependencies`}));const r=e.module(o);i.import("Vec",r);const u=e.module(l);i.import("pack",u),i.import("HideInput",u),i.import("BubbleRange",u),i.import("rangeStyles",u);const c=e.module(s);return i.import("actionButton",c),i.import("radioGroup",c),i}function c(e,t){const i=e.module(),a=new Map([["doodlepreview@1.jpg",new URL(n(7872),n.b)]]);i.builtin("FileAttachment",e.fileAttachments((e=>a.get(e)))),i.variable(t()).define(["md"],(function(e){return e`# Interactive Wallpaper Groups`})),i.variable(t()).define(["md"],(function(e){return e`**Note**: This is a minimal fork of the excellent [Wallpaper Groups](https://observablehq.com/@esperanc/wallpaper-groups) notebook by [Claudio Esperança](https://observablehq.com/@esperanc).`})),i.variable(t()).define(["md"],(function(e){return e`From [Wikipedia](https://en.wikipedia.org/wiki/Wallpaper_group):
>A *wallpaper group* (or plane symmetry group or plane crystallographic group) is a mathematical classification of a two-dimensional repetitive pattern, based on the symmetries in the pattern. Such patterns occur frequently in architecture and decorative art, especially in textiles and tiles as well as wallpaper.

>The simplest wallpaper group, Group p1, applies when there is no symmetry other than the fact that a pattern repeats over regular intervals in two dimensions.

In this notebook you can explore all 17 wallpaper groups interactively. The interface lets you select the group and an image sample that is used to produce a tiling with that particular group. 

For added flexibility, you can use the mouse to adjust the affine transformations of both the master grid (select the *master* interaction mode) and the image itself (select the *image*). Just click and drag the origin or the arrow tips of the respective coordinate axes (blue for master and red for image). Select *none* as interaction mode if you want to observe the result without the auxiliary grid lines.`})),i.variable(t()).define(["md"],(function(e){return e`<hr style="background:none;border-bottom:1px solid black">`})),i.variable(t("group")).define("group",["Inputs","wg","width"],(function(e,t,n){let i=e.radio(Object.keys(t),{label:"Wallpaper group",value:"p1"});return i.style.maxWidth=""+(n+"px"),i})),i.variable(t("mode")).define("mode",["Inputs"],(function(e){return e.radio(["master","image","none"],{label:"Interaction mode",value:"master"})})),i.variable(t("sample")).define("sample",["Inputs"],(function(e){return e.radio(["doodle","hand drawing","custom"],{label:"Sample Image",value:"doodle"})})),i.variable(t("customImgFile")).define("customImgFile",["Inputs"],(function(e){return e.file({label:"Custom image file",accept:".png,.jpg,.jpeg,.svg"})})),i.variable(t("handDrawing")).define("handDrawing",["miniDraw","HideInput"],(function(e,t){let n=e({width:200,height:200});n.style.width="800px",n.style.top="-20px",n.style.left="20px",n.value.style.background="white";let i=t("hand drawing tool",n,{pop:!0});return i.children[2].style.visibility="hidden",i})),i.variable(t()).define(["reset","DOM","Vec","makeFrame","mode","makeTiling","iterations","makeTransformFromDiagrams","sample","getDoodle","handDrawing","customImgFile","wg","group","invalidation"],(function(e,t,n,i,a,r,o,l,s,u,c,d,h,f,p){let m;const b=800,v=450,y=t.context2d(b,v,1),g=y.canvas,w=n(400,225);let x=i(w.x-100,w.y-100,200),k=(x.clone(),x.clone()),T=k.clone();const $=t.context2d(200,200,1),I=$.canvas,M=()=>{y.clearRect(0,0,b,v);a.value;y.strokeStyle="gray",y.lineWidth=.5;let e=r(x,m,o.value,-800,-450,1600,900),t=l(k,T),n=k.points[0];for(let i of e){let e=l(x,i).mult(t);y.save(),y.transform(e.a,e.b,e.c,e.d,e.e,e.f),y.drawImage(I,n.x,n.y),y.restore(),"none"!=a.value&&i.draw(y)}if("image"==a.value){l(k,T);y.lineWidth=4,y.strokeStyle="white",T.draw(y),y.lineWidth=2,y.strokeStyle="red",T.draw(y)}else"master"==a.value&&(y.lineWidth=4,y.strokeStyle="white",x.draw(y),y.lineWidth=2,y.strokeStyle="blue",x.draw(y))};async function R(){let e;switch(s.value){case"doodle":e=u(~~(52*Math.random()));break;case"hand drawing":e=c.value;break;case"custom":e=await d.value.image()}$.clearRect(0,0,200,200),$.drawImage(e,0,0,200,200),M()}const S=()=>{m=h[f.value],M()};S(),R(),a.addEventListener("input",M),o.addEventListener("input",M),f.addEventListener("input",S),p.then((()=>{a.removeEventListener("input",M),o.removeEventListener("input",M),f.removeEventListener("input",S)})),g.onmousedown=e=>"master"==a.value?x.mouseDown(e):"image"==a.value?T.mouseDown(e):0,g.onmouseup=e=>"master"==a.value?x.mouseUp(e):"image"==a.value?T.mouseUp(e):0,g.onmousemove=e=>{e.buttons&&("master"==a.value&&x.mouseMove(e)||"image"==a.value&&T.mouseMove(e))&&M()};const C=e=>{R()},D=e=>{"hand drawing"==s.value&&R()},P=e=>{"custom"==s.value&&R()};return s.addEventListener("input",C),c.addEventListener("input",D),d.addEventListener("input",P),p.then((()=>{s.removeEventListener("input",C),c.removeEventListener("input",D),d.removeEventListener("input",P)})),g})),i.variable(t()).define(["md"],(function(e){return e`<hr style="background:none;border-top:1px solid black">`})),i.variable(t()).define(["md"],(function(e){return e`
### (some additional controls)`})),i.variable(t("viewof reset")).define("viewof reset",["Inputs"],(function(e){return e.button("reset")})),i.variable(t("reset")).define("reset",["Generators","viewof reset"],((e,t)=>e.input(t))),i.variable(t("iterations")).define("iterations",["Inputs"],(function(e){return e.range([1,100],{label:"Iterations",step:1,value:40})})),i.variable(t()).define(["md"],(function(e){return e`<br>
## Implementation`})),i.variable(t("getDoodle")).define("getDoodle",["FileAttachment","DOM"],(async function(e,t){let n=await e("doodlepreview@1.jpg").image(),i=t.context2d(n.width,n.height,1);i.drawImage(n,0,0);let a=i.getImageData(0,0,n.width,n.height);const[r,o]=[4,13];return function(e){let i=t.context2d(128,128,1),l=i.createImageData(128,128);e%=r*o;let s=Math.trunc(e/o),u=e%o;for(let t=0;t<128;t++){let e=4*((t+128*s)*n.width+128*u),i=128*t*4;for(let t=0;t<128;t++){let t=l.data[i++]=a.data[e++];l.data[i++]=a.data[e++],l.data[i++]=a.data[e++],l.data[i++]=(t<200)*a.data[e++]}}return i.putImageData(l,0,0),i.canvas}})),i.variable(t("Diagram")).define("Diagram",["Vec"],(function(e){return class t{constructor(){this.points=[],this.rays=[]}clone(){let e=new t;for(let t of this.points)e.addPoint(t.clone());for(let{ipoint:t,v:n}of this.rays)e.addRay(t,n.clone());return e}transform(e){const n=new t;for(let t of this.points)n.addPoint(e.applyPoint(t));for(let{ipoint:t,v:i}of this.rays)n.addRay(t,e.applyVector(i));return n}addPoint(e){const t=this.points.length;return this.points.push(e),t}addRay(e,t){const n=this.rays.length;return this.rays.push({ipoint:e,v:t}),n}mouseDown(t){this.selectedRay=null,this.selectedPoint=null;let n=e(t.offsetX,t.offsetY);this.mouse=n;for(let e of this.rays){let{ipoint:t,v:i}=e;if(this.points[t].add(i).dist(n)<8)return this.selectedRay=e,!0}for(let e of this.points)if(e.dist(n)<8)return this.selectedPoint=e,!0;return!1}mouseMove(t){let n=this.selectedRay,i=e(t.offsetX,t.offsetY),a=i.sub(this.mouse);if(this.mouse=i,n)return n.v=n.v.add(a),!0;{let e=this.selectedPoint;if(e)return e.set(e.add(a)),!0}return!1}mouseUp(e){this.selectedRay=null,this.selectedPoint=null}draw(e,t={}){const{pointSize:n=8,arrowSize:i=10,alternateArrowTypes:a=!0}=t;let r=!1;for(let{ipoint:o,v:l}of this.rays){r=!r;const t=this.points[o],s=t.add(l);if(e.beginPath(),!r&&a||e.arc(s.x,s.y,n/2,0,2*Math.PI),e.moveTo(t.x,t.y),e.lineTo(s.x,s.y),!r||!a){const t=l.normalize(),n=t.rotate(.9*Math.PI).scale(i);e.lineTo(...s.add(n).array());const a=t.rotate(.9*-Math.PI).scale(i);e.moveTo(s.x,s.y),e.lineTo(...s.add(a).array())}e.stroke()}for(let o of this.points){e.beginPath();for(let[t,i]of[[-1,1],[1,1],[1,-1],[-1,-1]])e.lineTo(o.x+t*n/2,o.y+i*n/2);e.closePath(),e.stroke()}}}})),i.variable(t("makeDiagramFromFrame")).define("makeDiagramFromFrame",["Diagram"],(function(e){return function(t,n,i){const a=new e;a.addPoint(t);return a.addRay(0,n),a.addRay(0,i),a}})),i.variable(t("makeDiagramFromMatrix")).define("makeDiagramFromMatrix",["makeDiagramFromFrame","Vec"],(function(e,t){return function(n){return e(t(n.e,n.f),t(n.a,n.b),t(n.c,n.d))}})),i.variable(t("makeMatrixFromDiagram")).define("makeMatrixFromDiagram",["makeMatrix"],(function(e){return function(t){return e(t.points[0],t.rays[0].v,t.rays[1].v)}})),i.variable(t("makeFrame")).define("makeFrame",["makeDiagramFromFrame","Vec"],(function(e,t){return function(n,i,a){return e(t(n,i),t(a,0),t(0,a))}})),i.variable(t("makeMatrix")).define("makeMatrix",["Matrix"],(function(e){return function(t,n,i){return new e(n.x,n.y,i.x,i.y,t.x,t.y)}})),i.variable(t("makeTransform")).define("makeTransform",["makeMatrix"],(function(e){return function(t,n,i,a,r,o){let l=e(t,n,i);return e(a,r,o).mult(l.inverse())}})),i.variable(t("makeTransformFromDiagrams")).define("makeTransformFromDiagrams",["makeTransform"],(function(e){return function(t,n){return e(t.points[0],t.rays[0].v,t.rays[1].v,n.points[0],n.rays[0].v,n.rays[1].v)}})),i.variable(t("makeTranslation")).define("makeTranslation",["Matrix"],(function(e){return function(t){return e.translate(t.x,t.y)}})),i.variable(t("makeRotation")).define("makeRotation",["Matrix"],(function(e){return function(t,n){const i=n/180*Math.PI;return e.translate(t.x,t.y).mult(e.rotate(i)).mult(e.translate(-t.x,-t.y))}})),i.variable(t("makeReflection")).define("makeReflection",["Vec","makeTransform"],(function(e,t){return function(n,i){let a=e(-i.y,i.x);return t(n,i,a,n,i.scale(-1),a)}})),i.variable(t("makeGlide")).define("makeGlide",["Vec","makeTransform"],(function(e,t){return function(n,i,a){let r=e(-a.y,a.x);return t(n,a,r,i,a,r.scale(-1))}})),i.variable(t("PointMap")).define("PointMap",(function(){return class e extends Map{constructor(...e){super(...e)}static hash(e){return Math.round(1e3*e.x)+","+Math.round(1e3*e.y)}has(t){return super.has(e.hash(t))}set(t,n){return super.set(e.hash(t),n)}get(t){return super.get(e.hash(t))}}})),i.variable(t("makeTiling")).define("makeTiling",["makeFrame","makeTransformFromDiagrams","PointMap","makeDiagramFromMatrix","Matrix"],(function(e,t,n,i,a){return function(r,o,l,s,u,c,d){let h=e(0,0,1),f=t(h,r),p=new n,m=[];const b=e=>{let t=[];for(let n of e)for(let e of o){let a=e.mult(n),r=i(a).transform(f),o=r.points[0].add(r.points[0].add(r.rays[0].v)).add(r.points[0].add(r.rays[1].v)).scale(1/3);p.has(o)||o.x>=s&&o.x<=c&&o.y>=u&&o.y<=d&&(m.push(r),t.push(a),p.set(o,r))}return t};let v=[new a];for(let e=0;e<l&&v.length>0;e++)v=b(v);return m}})),i.variable(t("wg")).define("wg",["makeTranslation","Vec","makeRotation","makeReflection","makeGlide"],(function(e,t,n,i,a){return{p1:[e(t(1,0)),e(t(0,1)),e(t(-1,0)),e(t(0,-1))],p2:[n(t(.5,0),180),n(t(.5,1),180),n(t(0,.5),180),n(t(1,.5),180)],pm:[e(t(0,1)),e(t(0,-1)),i(t(0,0),t(1,0)),i(t(1,0),t(1,0))],pg:[e(t(0,1)),e(t(0,-1)),a(t(0,.5),t(1,.5),t(1,0)),a(t(0,.5),t(-1,.5),t(1,0))],cm:[i(t(0,0),t(0,1)),i(t(0,1),t(0,1)),a(t(0,.5),t(1,.5),t(1,0)),a(t(0,.5),t(-1,.5),t(1,0))],pmm:[n(t(0,0),180),n(t(1,0),180),n(t(0,1),180),n(t(1,1),180),i(t(0,0),t(0,1)),i(t(0,0),t(1,0)),i(t(0,1),t(0,1)),i(t(1,0),t(1,0))],pmg:[n(t(0,.5),180),n(t(1,.5),180),i(t(0,0),t(0,1)),i(t(0,1),t(0,1))],pgg:[n(t(1.5,.5),180),n(t(-.5,.5),180),n(t(.5,1.5),180),n(t(.5,-.5),180),a(t(0,0),t(1,0),t(1,0)),a(t(0,1),t(1,1),t(1,0)),a(t(0,0),t(0,1),t(0,1)),a(t(1,0),t(1,1),t(0,1))],cmm:[n(t(0,0),180),n(t(.5,.5),180),i(t(0,0),t(1,0)),i(t(0,0),t(0,1))],p4:[n(t(0,0),90),n(t(1,1),90),n(t(1,0),180),n(t(0,1),180)],p4m:[n(t(0,1),90),n(t(1,0),90),i(t(.5,.5),t(1,1))],p4g:[i(t(.5,.5),t(1,1)),n(t(0,0),90)],p3:[n(t(.5,Math.sqrt(3)/6),120),n(t(0,0),120)],p3m1:[n(t(.5,Math.sqrt(3)/6),120),n(t(0,0),120),i(t(.5,0),t(1,0))],p31m:[n(t(.5,Math.sqrt(3)/6),120),n(t(0,0),120),i(t(.5,0),t(0,1))],p6:[n(t(.5,Math.sqrt(3)/6),120),n(t(0,0),60)],p6m:[n(t(.5,Math.sqrt(3)/6),120),n(t(0,0),60),i(t(.5,0),t(1,0)),i(t(.5,0),t(0,1))]}})),i.variable(t()).define(["md"],(function(e){return e`## Dependencies`}));const r=e.module(o);i.import("Vec",r),i.import("Matrix",r);const s=e.module(u);i.import("miniDraw",s);const c=e.module(l);return i.import("HideInput",c),i}n.d(t,{Z:function(){return c}})}}]);